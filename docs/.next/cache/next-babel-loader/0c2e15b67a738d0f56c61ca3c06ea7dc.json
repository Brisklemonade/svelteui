{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\n\nvar useMediaQuery = function useMediaQuery(width) {\n  _s();\n\n  var _useState = useState(false),\n      targetReached = _useState[0],\n      setTargetReached = _useState[1];\n\n  var updateTarget = useCallback(function (e) {\n    if (e.matches) {\n      setTargetReached(true);\n    } else {\n      setTargetReached(false);\n    }\n  }, []);\n  useEffect(function () {\n    var media = window.matchMedia(\"(max-width: \".concat(width, \"px)\"));\n    media.addListener(updateTarget); // Check on mount (callback is not called until a change occurs)\n\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return function () {\n      return media.removeListener(updateTarget);\n    };\n  }, []);\n  return targetReached;\n};\n\n_s(useMediaQuery, \"3YJ+medpEEIXi9i+LP+brdzS5O0=\");\n\nvar useIsMobile = function useIsMobile() {\n  _s2();\n\n  return useMediaQuery(1024);\n};\n\n_s2(useIsMobile, \"AGUsWXV/IGWEYGrGyhqugaEb9zc=\", false, function () {\n  return [useMediaQuery];\n});\n\nexport { useMediaQuery, useIsMobile };","map":{"version":3,"sources":["/Users/kamell/Desktop/test-docs/src/components/useIsMobile.js"],"names":["useState","useCallback","useEffect","useMediaQuery","width","targetReached","setTargetReached","updateTarget","e","matches","media","window","matchMedia","addListener","removeListener","useIsMobile"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAC7B,kBAA0CJ,QAAQ,CAAC,KAAD,CAAlD;AAAA,MAAOK,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,YAAY,GAAGN,WAAW,CAAC,UAAAO,CAAC,EAAI;AACpC,QAAIA,CAAC,CAACC,OAAN,EAAe;AACbH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAN+B,EAM7B,EAN6B,CAAhC;AAOAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,KAAK,GAAGC,MAAM,CAACC,UAAP,uBAAiCR,KAAjC,SAAd;AACAM,IAAAA,KAAK,CAACG,WAAN,CAAkBN,YAAlB,EAFc,CAEkB;;AAEhC,QAAIG,KAAK,CAACD,OAAV,EAAmB;AACjBH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAED,WAAO;AAAA,aAAMI,KAAK,CAACI,cAAN,CAAqBP,YAArB,CAAN;AAAA,KAAP;AACD,GATQ,EASN,EATM,CAAT;AAUA,SAAOF,aAAP;AACD,CApBD;;GAAMF,a;;AAsBN,IAAMY,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,SAAOZ,aAAa,CAAC,IAAD,CAApB;AACD,CAFD;;IAAMY,W;UACGZ,a;;;AAGT,SAASA,aAAT,EAAwBY,WAAxB","sourcesContent":["import { useState, useCallback, useEffect } from 'react'\n\nconst useMediaQuery = width => {\n  const [targetReached, setTargetReached] = useState(false)\n  const updateTarget = useCallback(e => {\n    if (e.matches) {\n      setTargetReached(true)\n    } else {\n      setTargetReached(false)\n    }\n  }, [])\n  useEffect(() => {\n    const media = window.matchMedia(`(max-width: ${width}px)`)\n    media.addListener(updateTarget) // Check on mount (callback is not called until a change occurs)\n\n    if (media.matches) {\n      setTargetReached(true)\n    }\n\n    return () => media.removeListener(updateTarget)\n  }, [])\n  return targetReached\n}\n\nconst useIsMobile = () => {\n  return useMediaQuery(1024)\n}\n\nexport { useMediaQuery, useIsMobile }\n"]},"metadata":{},"sourceType":"module"}