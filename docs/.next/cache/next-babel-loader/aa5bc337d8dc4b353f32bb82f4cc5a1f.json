{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"components\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/kamell/Desktop/test-docs/src/pages/core/button.mdx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { LayoutDocs } from 'components/LayoutDocs';\nexport var meta = {\n  \"id\": \"button\",\n  \"title\": \"Button\",\n  \"group\": \"svelteuidev-core\",\n  \"packageGroup\": \"@svelteuidev/core\",\n  \"category\": \"inputs\",\n  \"description\": \"Render a button or link with button styles from SvelteUI theme\",\n  \"example\": \"https://codesandbox.io/embed/core-button-rzb1rs?fontsize=14&hidenavigation=1&module=%2FApp.svelte&theme=dark&view=preview\"\n};\nvar layoutProps = {\n  meta: meta\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(LayoutDocs, _extends({\n    meta: meta\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }), children);\n};\n\n_c = MDXLayout;\nexport default function MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), mdx(\"h2\", {\n    \"id\": \"usage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"Usage\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#usage\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"To see all of this in action, modify the interactive example above \\uD83D\\uDE01\"), mdx(\"h2\", {\n    \"id\": \"variants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Variants\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#variants\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Button supports the following variants: default, subtle, white, gradient, filled, light and outline. Default Button color is \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 137\n    }\n  }, \"theme.blue600\"), \", to change color and variant pass \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 233\n    }\n  }, \"color\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 291\n    }\n  }, \"variant\"), \" props:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, \"<Button color=\\\"red\\\" /> // filled button with red color\\n<Button variant=\\\"outline\\\" /> // outline button with theme.blue600 color\\n\")), mdx(\"h3\", {\n    \"id\": \"gradient-variant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Gradient variant\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#gradient-variant\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \"To use gradient as Button background:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 35\n    }\n  }, \"variant\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 100\n    }\n  }, \"gradient\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }\n  }, \"gradient\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 101\n    }\n  }, \"(from: 'color-from', to: 'color-to', deg: 135)\"), \", where\", mdx(\"ul\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 31\n    }\n  }, \"color-from\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 95\n    }\n  }, \"color-to\"), \" are color from \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 168\n    }\n  }, \"theme.colors\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }\n  }, \"deg\"), \" is linear gradient deg\")))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, \"<Button variant='gradient'>Default</Button>\\n<Button variant='gradient' gradient={{from: 'teal', to: 'green', deg: 105}} >Lime Green</Button>\\n<Button variant='gradient' gradient={{from: 'teal', to: 'blue', deg: 60}} >Teal Blue</Button>\\n<Button variant='gradient' gradient={{from: 'orange', to: 'red', deg: 45}} >Orange red</Button>\\n<Button variant='gradient' gradient={{from: 'grape', to: 'pink', deg: 35}} >Grape Pink</Button>\\n\")), mdx(\"h3\", {\n    \"id\": \"white-variant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"White variant\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#white-variant\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"White is a variant in which button background color is always white (both in light and dark theme) and color is controlled with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 140\n    }\n  }, \"color\"), \" prop:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, \"<Button variant='white'>Click Me</Button>\\n\")), mdx(\"h2\", {\n    \"id\": \"loading-state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Loading state\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#loading-state\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, \"Button supports loading state. In this state \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/core/loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 57\n    }\n  }, \"Loader\"), \" component replaces left or right icon,\\nbutton becomes disabled and white or dark overlay is added.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"You can control loading state and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/core/loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 46\n    }\n  }, \"Loader\"), \" component with following props:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }\n  }, \"loading\"), \" - enable loading state\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 27\n    }\n  }, \"loaderPosition\"), \" - Loader position relative to button label, either right or left\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 27\n    }\n  }, \"loaderProps\"), \" - props spread to Loader component, you can choose loader type, size and any other \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/core/loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 171\n    }\n  }, \"supported\"), \" prop\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }\n  }, \"<Button {loading}>Click Me</Button>\\n\")), mdx(\"h2\", {\n    \"id\": \"customize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, \"Customize\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#customize\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, \"You can change styles of any element in button component with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/override/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 74\n    }\n  }, \"Override API\"), \" to match your design requirements:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }\n  }, \"<Button override={{backgroundColor: 'red'}} variant='outline'>Click Me</Button>\\n<Button>\\n    <TwitterLogo slot='leftIcon' />\\n    Click Me\\n</Button>\\n\")), mdx(\"h2\", {\n    \"id\": \"size-and-radius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, \"Size and radius\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#size-and-radius\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 27\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, \"Control button font-size, height and padding with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 62\n    }\n  }, \"size\"), \" and border-radius with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 138\n    }\n  }, \"radius\"), \" props.\\nBoth props have predefined values: xs, sm, md, lg, xl.\\nAlternatively, you can use a number to set radius in px:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }\n  }, \"<Button radius=\\\"lg\\\" /> // -> theme predefined large radius\\n<Button radius={10} /> // -> ( borderRadius: '10px' )\\n<Button size=\\\"sm\\\" /> // -> predefined small size\\n\")), mdx(\"h2\", {\n    \"id\": \"compact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, \"Compact\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compact\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 10\n    }\n  }))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 10\n    }\n  }, \"<Button compact>Click Me</Button>\\n<Button variant='outline' compact>Click Me</Button>\\n<Button variant='default' compact>Click Me</Button>\\n\")), mdx(\"h2\", {\n    \"id\": \"full-width-and-overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, \"Full width and overflow\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#full-width-and-overflow\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 35\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, \"Button can take full width of container if you set \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 63\n    }\n  }, \"fullSize\"), \" prop.\\nIf button is too large for its container, overflow content will be hidden:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 10\n    }\n  }, \"<Button fullSize>Click Me</Button>\\n\")), mdx(\"h2\", {\n    \"id\": \"change-root-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, \"Change root element\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#change-root-element\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 31\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, \"You can use Button component both as \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 49\n    }\n  }, \"button\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 108\n    }\n  }, \"a\"), \" elements. The component's root element can be changed by adding the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 226\n    }\n  }, \"href\"), \" prop. Adding the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 296\n    }\n  }, \"external\"), \" prop will set the target attribute to blank:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 10\n    }\n  }, \"<Button href='https://example.com'>I go to example.com</Button>\\n\")));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDXLayout\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["/Users/kamell/Desktop/test-docs/src/pages/core/button.mdx"],"names":["React","mdx","LayoutDocs","meta","layoutProps","MDXLayout","children","props","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { LayoutDocs } from 'components/LayoutDocs';\n\nexport const meta = {\n  \"id\": \"button\",\n  \"title\": \"Button\",\n  \"group\": \"svelteuidev-core\",\n  \"packageGroup\": \"@svelteuidev/core\",\n  \"category\": \"inputs\",\n  \"description\": \"Render a button or link with button styles from SvelteUI theme\",\n  \"example\": \"https://codesandbox.io/embed/core-button-rzb1rs?fontsize=14&hidenavigation=1&module=%2FApp.svelte&theme=dark&view=preview\"\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = ({ children, ...props }) => (\n  <LayoutDocs meta={meta} {...props}>{children}</LayoutDocs>\n)\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}<a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`To see all of this in action, modify the interactive example above 😁`}</p>\n    <h2 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}<a parentName=\"h2\" {...{\n        \"href\": \"#variants\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`Button supports the following variants: default, subtle, white, gradient, filled, light and outline. Default Button color is `}<inlineCode parentName=\"p\">{`theme.blue600`}</inlineCode>{`, to change color and variant pass `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`variant`}</inlineCode>{` props:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button color=\"red\" /> // filled button with red color\n<Button variant=\"outline\" /> // outline button with theme.blue600 color\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"gradient-variant\"\n    }}>{`Gradient variant`}<a parentName=\"h3\" {...{\n        \"href\": \"#gradient-variant\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h3>\n    <p>{`To use gradient as Button background:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`set `}<inlineCode parentName=\"li\">{`variant`}</inlineCode>{` prop to `}<inlineCode parentName=\"li\">{`gradient`}</inlineCode></li>\n      <li parentName=\"ul\">{`set `}<inlineCode parentName=\"li\">{`gradient`}</inlineCode>{` prop to `}<inlineCode parentName=\"li\">{`(from: 'color-from', to: 'color-to', deg: 135)`}</inlineCode>{`, where`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`color-from`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`color-to`}</inlineCode>{` are color from `}<inlineCode parentName=\"li\">{`theme.colors`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`deg`}</inlineCode>{` is linear gradient deg`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button variant='gradient'>Default</Button>\n<Button variant='gradient' gradient={{from: 'teal', to: 'green', deg: 105}} >Lime Green</Button>\n<Button variant='gradient' gradient={{from: 'teal', to: 'blue', deg: 60}} >Teal Blue</Button>\n<Button variant='gradient' gradient={{from: 'orange', to: 'red', deg: 45}} >Orange red</Button>\n<Button variant='gradient' gradient={{from: 'grape', to: 'pink', deg: 35}} >Grape Pink</Button>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"white-variant\"\n    }}>{`White variant`}<a parentName=\"h3\" {...{\n        \"href\": \"#white-variant\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h3>\n    <p>{`White is a variant in which button background color is always white (both in light and dark theme) and color is controlled with `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button variant='white'>Click Me</Button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"loading-state\"\n    }}>{`Loading state`}<a parentName=\"h2\" {...{\n        \"href\": \"#loading-state\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`Button supports loading state. In this state `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/core/loader\"\n      }}>{`Loader`}</a>{` component replaces left or right icon,\nbutton becomes disabled and white or dark overlay is added.`}</p>\n    <p>{`You can control loading state and `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/core/loader\"\n      }}>{`Loader`}</a>{` component with following props:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`loading`}</inlineCode>{` - enable loading state`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`loaderPosition`}</inlineCode>{` - Loader position relative to button label, either right or left`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`loaderProps`}</inlineCode>{` - props spread to Loader component, you can choose loader type, size and any other `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/core/loader\"\n        }}>{`supported`}</a>{` prop`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button {loading}>Click Me</Button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"customize\"\n    }}>{`Customize`}<a parentName=\"h2\" {...{\n        \"href\": \"#customize\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`You can change styles of any element in button component with `}<a parentName=\"p\" {...{\n        \"href\": \"/theming/override/\"\n      }}>{`Override API`}</a>{` to match your design requirements:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button override={{backgroundColor: 'red'}} variant='outline'>Click Me</Button>\n<Button>\n    <TwitterLogo slot='leftIcon' />\n    Click Me\n</Button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"size-and-radius\"\n    }}>{`Size and radius`}<a parentName=\"h2\" {...{\n        \"href\": \"#size-and-radius\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`Control button font-size, height and padding with `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` and border-radius with `}<inlineCode parentName=\"p\">{`radius`}</inlineCode>{` props.\nBoth props have predefined values: xs, sm, md, lg, xl.\nAlternatively, you can use a number to set radius in px:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button radius=\"lg\" /> // -> theme predefined large radius\n<Button radius={10} /> // -> ( borderRadius: '10px' )\n<Button size=\"sm\" /> // -> predefined small size\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"compact\"\n    }}>{`Compact`}<a parentName=\"h2\" {...{\n        \"href\": \"#compact\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button compact>Click Me</Button>\n<Button variant='outline' compact>Click Me</Button>\n<Button variant='default' compact>Click Me</Button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"full-width-and-overflow\"\n    }}>{`Full width and overflow`}<a parentName=\"h2\" {...{\n        \"href\": \"#full-width-and-overflow\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`Button can take full width of container if you set `}<inlineCode parentName=\"p\">{`fullSize`}</inlineCode>{` prop.\nIf button is too large for its container, overflow content will be hidden:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button fullSize>Click Me</Button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"change-root-element\"\n    }}>{`Change root element`}<a parentName=\"h2\" {...{\n        \"href\": \"#change-root-element\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`You can use Button component both as `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` elements. The component's root element can be changed by adding the `}<inlineCode parentName=\"p\">{`href`}</inlineCode>{` prop. Adding the `}<inlineCode parentName=\"p\">{`external`}</inlineCode>{` prop will set the target attribute to blank:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button href='https://example.com'>I go to example.com</Button>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}