{"ast":null,"code":"var _jsxFileName = \"/Users/kamell/Desktop/test-docs/src/pages/utilities/os.mdx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { LayoutDocs } from 'components/LayoutDocs';\nexport const meta = {\n  \"id\": \"os\",\n  \"title\": \"os\",\n  \"group\": \"svelteuidev-utilities\",\n  \"packageGroup\": \"@svelteuidev/utilities\",\n  \"description\": \"Retrieves the user's os\",\n  \"example\": \"https://codesandbox.io/embed/os-h4dvj6?fontsize=14&hidenavigation=1&module=%2FApp.svelte&theme=dark&view=preview\"\n};\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return mdx(LayoutDocs, _extends({\n    meta: meta\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }), children);\n};\n\nexport default function MDXContent(_ref2) {\n  let {\n    components\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }), mdx(\"h2\", {\n    \"id\": \"usage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, `Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#usage\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, `<script>\n    import { os as _os } from '@svelteuidev/utilities';\n\n    const os = _os();\n</script>\n\n<p>Your os is <b>{os}</b></p>\n`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, `The os utility function detects a user's os. Possible values are: `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 78\n    }\n  }, `undetermined`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 140\n    }\n  }, `macos`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 195\n    }\n  }, `ios`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 248\n    }\n  }, `windows`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 305\n    }\n  }, `android`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 362\n    }\n  }, `linux`), `.\nIf the os cannot be identified as well as during server side rendering `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 74\n    }\n  }, `undetermined`), ` will be returned.`), mdx(\"h2\", {\n    \"id\": \"typescript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, `TypeScript`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#typescript\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 22\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, `You can import `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }\n  }, `OS`), ` union type from `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 94\n    }\n  }, `@svelteuidev/utilities`), `:`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, `import type { OS } from '@svelteuidev/utilities';\n// OS type is 'undetermined' | 'macos' | 'ios' | 'windows' | 'android' | 'linux'\n`)), mdx(\"h2\", {\n    \"id\": \"definition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, `Definition`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#definition\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, `function getOS():\n  | 'undetermined'\n  | 'macos'\n  | 'ios'\n  | 'windows'\n  | 'android'\n  | 'linux';\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["/Users/kamell/Desktop/test-docs/src/pages/utilities/os.mdx"],"names":["React","mdx","LayoutDocs","meta","layoutProps","MDXLayout","children","props","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { LayoutDocs } from 'components/LayoutDocs';\n\nexport const meta = {\n  \"id\": \"os\",\n  \"title\": \"os\",\n  \"group\": \"svelteuidev-utilities\",\n  \"packageGroup\": \"@svelteuidev/utilities\",\n  \"description\": \"Retrieves the user's os\",\n  \"example\": \"https://codesandbox.io/embed/os-h4dvj6?fontsize=14&hidenavigation=1&module=%2FApp.svelte&theme=dark&view=preview\"\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = ({ children, ...props }) => (\n  <LayoutDocs meta={meta} {...props}>{children}</LayoutDocs>\n)\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}<a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<script>\n    import { os as _os } from '@svelteuidev/utilities';\n\n    const os = _os();\n</script>\n\n<p>Your os is <b>{os}</b></p>\n`}</code></pre>\n    <p>{`The os utility function detects a user's os. Possible values are: `}<inlineCode parentName=\"p\">{`undetermined`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`macos`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ios`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`windows`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`android`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`linux`}</inlineCode>{`.\nIf the os cannot be identified as well as during server side rendering `}<inlineCode parentName=\"p\">{`undetermined`}</inlineCode>{` will be returned.`}</p>\n    <h2 {...{\n      \"id\": \"typescript\"\n    }}>{`TypeScript`}<a parentName=\"h2\" {...{\n        \"href\": \"#typescript\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`You can import `}<inlineCode parentName=\"p\">{`OS`}</inlineCode>{` union type from `}<inlineCode parentName=\"p\">{`@svelteuidev/utilities`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import type { OS } from '@svelteuidev/utilities';\n// OS type is 'undetermined' | 'macos' | 'ios' | 'windows' | 'android' | 'linux'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"definition\"\n    }}>{`Definition`}<a parentName=\"h2\" {...{\n        \"href\": \"#definition\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`function getOS():\n  | 'undetermined'\n  | 'macos'\n  | 'ios'\n  | 'windows'\n  | 'android'\n  | 'linux';\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}