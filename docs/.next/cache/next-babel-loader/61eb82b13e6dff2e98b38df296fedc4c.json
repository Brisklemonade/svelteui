{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"as\", \"children\", \"color\", \"intent\", \"size\", \"className\", \"icon\", \"minimal\", \"onClick\", \"iconRight\"];\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { forwardRefWithAs } from './forwardRefWithAs';\nimport cx from 'classnames';\nvar mapIntentToColor = {\n  primary: 'blue',\n  success: 'green',\n  danger: 'red',\n  warning: 'yellow'\n};\nexport var TWButton = forwardRefWithAs(_c = function _c(_ref, ref) {\n  var _mapIntentToColor$int, _cx, _cx2, _cx3;\n\n  var _ref$as = _ref.as,\n      is = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      color = _ref.color,\n      _ref$intent = _ref.intent,\n      intent = _ref$intent === void 0 ? 'none' : _ref$intent,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size,\n      className = _ref.className,\n      icon = _ref.icon,\n      minimal = _ref.minimal,\n      onClick = _ref.onClick,\n      iconRight = _ref.iconRight,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var tailwindColor = (_mapIntentToColor$int = mapIntentToColor[intent]) !== null && _mapIntentToColor$int !== void 0 ? _mapIntentToColor$int : color;\n  var iconIsOnlyChild = !!(icon && !iconRight && !children || iconRight && !icon && !children);\n  var sizeClasses;\n  var iconClasses;\n\n  if (size === 'xs') {\n    sizeClasses = 'text-xs rounded-md leading-4';\n    sizeClasses += iconIsOnlyChild ? ' p-1.5' : ' py-1.5 px-2.5';\n    iconClasses = 'h-3 w-3';\n  }\n\n  if (size === 'sm') {\n    sizeClasses = 'text-sm rounded-md leading-4';\n    sizeClasses += iconIsOnlyChild ? ' p-2' : ' py-2 px-3';\n    iconClasses = 'h-3 w-3';\n  }\n\n  if (size === 'md') {\n    sizeClasses = 'text-sm rounded-md leading-5';\n    sizeClasses += iconIsOnlyChild ? ' p-2' : ' py-2 px-4';\n    iconClasses = 'h-5 w-5';\n  }\n\n  if (size === 'lg') {\n    sizeClasses = 'text-base rounded-md leading-6';\n    sizeClasses += iconIsOnlyChild ? ' p-2' : ' py-2 px-4';\n    iconClasses = 'h-6 w-6';\n  }\n\n  if (size === 'xl') {\n    sizeClasses = 'text-base rounded-md leading-6';\n    sizeClasses += iconIsOnlyChild ? ' p-3' : ' py-3 px-6';\n    iconClasses = 'h-6 w-6';\n  }\n\n  var leftIcon = icon ? /*#__PURE__*/React.cloneElement(icon, _objectSpread(_objectSpread({}, icon.props), {}, {\n    height: '1em',\n    width: '1em',\n    className: cx('block', (_cx = {\n      'text-white': !!tailwindColor && !minimal\n    }, _defineProperty(_cx, \"text-\".concat(tailwindColor, \"-700\"), !!tailwindColor && !!minimal), _defineProperty(_cx, 'text-gray-600', !tailwindColor), _defineProperty(_cx, '-ml-1 mr-2', !iconIsOnlyChild), _cx), iconClasses, icon === null || icon === void 0 ? void 0 : icon.props.className)\n  })) : null;\n  var rightIcon = iconRight ? /*#__PURE__*/React.cloneElement(iconRight, _objectSpread(_objectSpread({}, iconRight.props), {}, {\n    height: '1em',\n    width: '1em',\n    className: cx('block ', (_cx2 = {\n      'text-white': !!tailwindColor && !minimal\n    }, _defineProperty(_cx2, \"text-\".concat(tailwindColor, \"-700\"), !!tailwindColor && !!minimal), _defineProperty(_cx2, 'text-gray-600', !tailwindColor), _defineProperty(_cx2, '-mr-1 ml-2', !iconIsOnlyChild), _cx2), iconClasses, iconRight === null || iconRight === void 0 ? void 0 : iconRight.props.className)\n  })) : null;\n\n  var propsToPass = _objectSpread(_objectSpread({}, props), {}, {\n    className: cx('font-medium inline-flex items-center justify-center focus:outline-none transition duration-150 ease-in-out', (_cx3 = {}, _defineProperty(_cx3, \"shadow-xs  border border-transparent text-white bg-\".concat(tailwindColor, \"-600 hover:bg-\").concat(tailwindColor, \"-500 focus:border-\").concat(tailwindColor, \"-700 focus:shadow-outline-\").concat(tailwindColor, \" active:border-\").concat(tailwindColor, \"-700\"), !!tailwindColor && !minimal), _defineProperty(_cx3, \"shadow-xs border border-gray-300 text-gray-700 bg-white hover:text-gray-500  focus:shadow-outline-blue focus:border-blue-300 active:text-gray-800 active:bg-gray-50\", !tailwindColor && !minimal), _defineProperty(_cx3, \"hover:bg-\".concat(tailwindColor, \"-100 active:bg-\").concat(tailwindColor, \"-200 text-\").concat(tailwindColor, \"-700 focus:shadow-outline-\").concat(tailwindColor, \" border-transparent\"), minimal && tailwindColor), _defineProperty(_cx3, \"hover:bg-gray-200 active:bg-gray-300 text-gray-900 focus:shadow-outline-blue border-transparent\", minimal && !tailwindColor), _cx3), sizeClasses, className),\n    children: __jsx(React.Fragment, null, leftIcon, children, rightIcon)\n  });\n\n  return /*#__PURE__*/React.createElement(is, _objectSpread(_objectSpread({}, propsToPass), {}, {\n    ref: ref,\n    onClick: onClick,\n    className: propsToPass.className\n  }));\n});\n_c2 = TWButton;\nTWButton.displayName = 'TWButton';\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TWButton$forwardRefWithAs\");\n$RefreshReg$(_c2, \"TWButton\");","map":{"version":3,"sources":["/Users/kamell/Desktop/test-docs/src/components/TWButton.js"],"names":["React","forwardRefWithAs","cx","mapIntentToColor","primary","success","danger","warning","TWButton","ref","as","is","children","color","intent","size","className","icon","minimal","onClick","iconRight","props","tailwindColor","iconIsOnlyChild","sizeClasses","iconClasses","leftIcon","cloneElement","height","width","rightIcon","propsToPass","createElement","displayName"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,MADc;AAEvBC,EAAAA,OAAO,EAAE,OAFc;AAGvBC,EAAAA,MAAM,EAAE,KAHe;AAIvBC,EAAAA,OAAO,EAAE;AAJc,CAAzB;AAMA,OAAO,IAAMC,QAAQ,GAAGP,gBAAgB,MAAC,kBAYtCQ,GAZsC,EAY9B;AAAA;;AAAA,qBAXTC,EAWS;AAAA,MAXLC,EAWK,wBAXA,QAWA;AAAA,MAVTC,QAUS,QAVTA,QAUS;AAAA,MATTC,KASS,QATTA,KASS;AAAA,yBARTC,MAQS;AAAA,MARTA,MAQS,4BARA,MAQA;AAAA,uBAPTC,IAOS;AAAA,MAPTA,IAOS,0BAPF,IAOE;AAAA,MANTC,SAMS,QANTA,SAMS;AAAA,MALTC,IAKS,QALTA,IAKS;AAAA,MAJTC,OAIS,QAJTA,OAIS;AAAA,MAHTC,OAGS,QAHTA,OAGS;AAAA,MAFTC,SAES,QAFTA,SAES;AAAA,MADNC,KACM;;AACT,MAAMC,aAAa,4BAAGnB,gBAAgB,CAACW,MAAD,CAAnB,yEAA+BD,KAAlD;AACA,MAAMU,eAAe,GAAG,CAAC,EAAEN,IAAI,IAAI,CAACG,SAAT,IAAsB,CAACR,QAAvB,IAAmCQ,SAAS,IAAI,CAACH,IAAd,IAAsB,CAACL,QAA5D,CAAzB;AACA,MAAIY,WAAJ;AACA,MAAIC,WAAJ;;AAEA,MAAIV,IAAI,KAAK,IAAb,EAAmB;AACjBS,IAAAA,WAAW,GAAG,8BAAd;AACAA,IAAAA,WAAW,IAAID,eAAe,GAAG,QAAH,GAAc,gBAA5C;AACAE,IAAAA,WAAW,GAAG,SAAd;AACD;;AAED,MAAIV,IAAI,KAAK,IAAb,EAAmB;AACjBS,IAAAA,WAAW,GAAG,8BAAd;AACAA,IAAAA,WAAW,IAAID,eAAe,GAAG,MAAH,GAAY,YAA1C;AACAE,IAAAA,WAAW,GAAG,SAAd;AACD;;AAED,MAAIV,IAAI,KAAK,IAAb,EAAmB;AACjBS,IAAAA,WAAW,GAAG,8BAAd;AACAA,IAAAA,WAAW,IAAID,eAAe,GAAG,MAAH,GAAY,YAA1C;AACAE,IAAAA,WAAW,GAAG,SAAd;AACD;;AAED,MAAIV,IAAI,KAAK,IAAb,EAAmB;AACjBS,IAAAA,WAAW,GAAG,gCAAd;AACAA,IAAAA,WAAW,IAAID,eAAe,GAAG,MAAH,GAAY,YAA1C;AACAE,IAAAA,WAAW,GAAG,SAAd;AACD;;AAED,MAAIV,IAAI,KAAK,IAAb,EAAmB;AACjBS,IAAAA,WAAW,GAAG,gCAAd;AACAA,IAAAA,WAAW,IAAID,eAAe,GAAG,MAAH,GAAY,YAA1C;AACAE,IAAAA,WAAW,GAAG,SAAd;AACD;;AAED,MAAMC,QAAQ,GAAGT,IAAI,gBAAGjB,KAAK,CAAC2B,YAAN,CAAmBV,IAAnB,kCAA8BA,IAAI,CAACI,KAAnC;AACtBO,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,KAAK,EAAE,KAFe;AAGtBb,IAAAA,SAAS,EAAEd,EAAE,CAAC,OAAD;AACX,oBAAc,CAAC,CAACoB,aAAF,IAAmB,CAACJ;AADvB,2CAEFI,aAFE,WAEoB,CAAC,CAACA,aAAF,IAAmB,CAAC,CAACJ,OAFzC,wBAGX,eAHW,EAGM,CAACI,aAHP,wBAIX,YAJW,EAIG,CAACC,eAJJ,SAKVE,WALU,EAKGR,IALH,aAKGA,IALH,uBAKGA,IAAI,CAAEI,KAAN,CAAYL,SALf;AAHS,KAAH,GAShB,IATL;AAUA,MAAMc,SAAS,GAAGV,SAAS,gBAAGpB,KAAK,CAAC2B,YAAN,CAAmBP,SAAnB,kCAAmCA,SAAS,CAACC,KAA7C;AAC5BO,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,KAAK,EAAE,KAFqB;AAG5Bb,IAAAA,SAAS,EAAEd,EAAE,CAAC,QAAD;AACX,oBAAc,CAAC,CAACoB,aAAF,IAAmB,CAACJ;AADvB,4CAEFI,aAFE,WAEoB,CAAC,CAACA,aAAF,IAAmB,CAAC,CAACJ,OAFzC,yBAGX,eAHW,EAGM,CAACI,aAHP,yBAIX,YAJW,EAIG,CAACC,eAJJ,UAKVE,WALU,EAKGL,SALH,aAKGA,SALH,uBAKGA,SAAS,CAAEC,KAAX,CAAiBL,SALpB;AAHe,KAAH,GAStB,IATL;;AAUA,MAAMe,WAAW,mCAAQV,KAAR;AACfL,IAAAA,SAAS,EAAEd,EAAE,CAAC,4GAAD,iGAC4CoB,aAD5C,2BAC0EA,aAD1E,+BAC4GA,aAD5G,uCACsJA,aADtJ,4BACqLA,aADrL,WAC2M,CAAC,CAACA,aAAF,IAAmB,CAACJ,OAD/N,gMAE8J,CAACI,aAAD,IAAkB,CAACJ,OAFjL,4CAGEI,aAHF,4BAGiCA,aAHjC,uBAG2DA,aAH3D,uCAGqGA,aAHrG,0BAG0IJ,OAAO,IAAII,aAHrJ,4HAI0FJ,OAAO,IAAI,CAACI,aAJtG,UAKVE,WALU,EAKGR,SALH,CADE;AAOfJ,IAAAA,QAAQ,EAAE,4BACHc,QADG,EAEHd,QAFG,EAGHkB,SAHG;AAPK,IAAjB;;AAaA,sBAAO9B,KAAK,CAACgC,aAAN,CAAoBrB,EAApB,kCAA6BoB,WAA7B;AACLtB,IAAAA,GAAG,EAAHA,GADK;AAELU,IAAAA,OAAO,EAAPA,OAFK;AAGLH,IAAAA,SAAS,EAAEe,WAAW,CAACf;AAHlB,KAAP;AAKD,CAtFuC,CAAjC;MAAMR,Q;AAuFbA,QAAQ,CAACyB,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from 'react';\nimport { forwardRefWithAs } from './forwardRefWithAs';\nimport cx from 'classnames';\nconst mapIntentToColor = {\n  primary: 'blue',\n  success: 'green',\n  danger: 'red',\n  warning: 'yellow'\n};\nexport const TWButton = forwardRefWithAs(({\n  as: is = 'button',\n  children,\n  color,\n  intent = 'none',\n  size = 'md',\n  className,\n  icon,\n  minimal,\n  onClick,\n  iconRight,\n  ...props\n}, ref) => {\n  const tailwindColor = mapIntentToColor[intent] ?? color;\n  const iconIsOnlyChild = !!(icon && !iconRight && !children || iconRight && !icon && !children);\n  let sizeClasses;\n  let iconClasses;\n\n  if (size === 'xs') {\n    sizeClasses = 'text-xs rounded-md leading-4';\n    sizeClasses += iconIsOnlyChild ? ' p-1.5' : ' py-1.5 px-2.5';\n    iconClasses = 'h-3 w-3';\n  }\n\n  if (size === 'sm') {\n    sizeClasses = 'text-sm rounded-md leading-4';\n    sizeClasses += iconIsOnlyChild ? ' p-2' : ' py-2 px-3';\n    iconClasses = 'h-3 w-3';\n  }\n\n  if (size === 'md') {\n    sizeClasses = 'text-sm rounded-md leading-5';\n    sizeClasses += iconIsOnlyChild ? ' p-2' : ' py-2 px-4';\n    iconClasses = 'h-5 w-5';\n  }\n\n  if (size === 'lg') {\n    sizeClasses = 'text-base rounded-md leading-6';\n    sizeClasses += iconIsOnlyChild ? ' p-2' : ' py-2 px-4';\n    iconClasses = 'h-6 w-6';\n  }\n\n  if (size === 'xl') {\n    sizeClasses = 'text-base rounded-md leading-6';\n    sizeClasses += iconIsOnlyChild ? ' p-3' : ' py-3 px-6';\n    iconClasses = 'h-6 w-6';\n  }\n\n  const leftIcon = icon ? React.cloneElement(icon, { ...icon.props,\n    height: '1em',\n    width: '1em',\n    className: cx('block', {\n      'text-white': !!tailwindColor && !minimal,\n      [`text-${tailwindColor}-700`]: !!tailwindColor && !!minimal,\n      'text-gray-600': !tailwindColor,\n      '-ml-1 mr-2': !iconIsOnlyChild\n    }, iconClasses, icon?.props.className)\n  }) : null;\n  const rightIcon = iconRight ? React.cloneElement(iconRight, { ...iconRight.props,\n    height: '1em',\n    width: '1em',\n    className: cx('block ', {\n      'text-white': !!tailwindColor && !minimal,\n      [`text-${tailwindColor}-700`]: !!tailwindColor && !!minimal,\n      'text-gray-600': !tailwindColor,\n      '-mr-1 ml-2': !iconIsOnlyChild\n    }, iconClasses, iconRight?.props.className)\n  }) : null;\n  const propsToPass = { ...props,\n    className: cx('font-medium inline-flex items-center justify-center focus:outline-none transition duration-150 ease-in-out', {\n      [`shadow-xs  border border-transparent text-white bg-${tailwindColor}-600 hover:bg-${tailwindColor}-500 focus:border-${tailwindColor}-700 focus:shadow-outline-${tailwindColor} active:border-${tailwindColor}-700`]: !!tailwindColor && !minimal,\n      [`shadow-xs border border-gray-300 text-gray-700 bg-white hover:text-gray-500  focus:shadow-outline-blue focus:border-blue-300 active:text-gray-800 active:bg-gray-50`]: !tailwindColor && !minimal,\n      [`hover:bg-${tailwindColor}-100 active:bg-${tailwindColor}-200 text-${tailwindColor}-700 focus:shadow-outline-${tailwindColor} border-transparent`]: minimal && tailwindColor,\n      [`hover:bg-gray-200 active:bg-gray-300 text-gray-900 focus:shadow-outline-blue border-transparent`]: minimal && !tailwindColor\n    }, sizeClasses, className),\n    children: <>\n          {leftIcon}\n          {children}\n          {rightIcon}\n        </>\n  };\n  return React.createElement(is, { ...propsToPass,\n    ref,\n    onClick,\n    className: propsToPass.className\n  });\n});\nTWButton.displayName = 'TWButton';"]},"metadata":{},"sourceType":"module"}