{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"components\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/kamell/Desktop/test-docs/src/pages/core/code.mdx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { LayoutDocs } from 'components/LayoutDocs';\nimport { Alert, Text } from '@mantine/core';\nimport { InfoCircledIcon } from '@radix-ui/react-icons';\nexport var meta = {\n  \"group\": \"svelteuidev-core\",\n  \"packageGroup\": \"@svelteuidev/core\",\n  \"title\": \"Code\",\n  \"slug\": \"/core/code/\",\n  \"category\": \"typography\",\n  \"description\": \"Inline or block code without syntax highlight\",\n  \"example\": \"https://codesandbox.io/embed/code-r032c1?fontsize=14&hidenavigation=1&module=%2FApp.svelte&theme=dark&view=preview\"\n};\nvar layoutProps = {\n  meta: meta\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(LayoutDocs, _extends({\n    meta: meta\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }), children);\n};\n\n_c = MDXLayout;\nexport default function MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }), mdx(\"h2\", {\n    \"id\": \"inline-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Inline code\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#inline-code\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"By default, Code component renders inline \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 54\n    }\n  }, \"code\"), \" html element:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, \"<Code>This code will be inline</Code>\\n\")), mdx(\"h2\", {\n    \"id\": \"block-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Block code\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#block-code\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"To render code in \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 30\n    }\n  }, \"pre\"), \" element pass \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 95\n    }\n  }, \"block\"), \" prop to Code component:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, \"<Code block copy message={codeForDemo}>\\n  {codeForDemo}\\n</Code>\\n\")), mdx(\"h2\", {\n    \"id\": \"custom-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"Custom color\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#custom-color\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"By default, code has gray color,\\nyou can change it to any color from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#default-colors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 39\n    }\n  }, \"theme colors\"), \":\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }, \"<Code color=\\\"red\\\">This will be inline</Code>\\n<Code color=\\\"teal\\\">This will be inline</Code>\\n<Code color=\\\"blue\\\">This will be inline</Code>\\n\")), mdx(\"h2\", {\n    \"id\": \"syntax-highlight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"Syntax highlight\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#syntax-highlight\",\n    \"title\": \"Direct link to heading\",\n    \"className\": \"anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 28\n    }\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }))), mdx(Alert, {\n    icon: mdx(InfoCircledIcon, {\n      mdxType: \"InfoCircledIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }\n    }),\n    title: \"Warning\",\n    color: \"yellow\",\n    mdxType: \"Alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, mdx(Text, {\n    size: \"lg\",\n    mdxType: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, \"In case you need syntax highlighting, a @sveltuidev/prism package will be available soon.\")));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDXLayout\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["/Users/kamell/Desktop/test-docs/src/pages/core/code.mdx"],"names":["React","mdx","LayoutDocs","Alert","Text","InfoCircledIcon","meta","layoutProps","MDXLayout","children","props","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { LayoutDocs } from 'components/LayoutDocs';\n\nimport { Alert, Text } from '@mantine/core';\nimport { InfoCircledIcon } from '@radix-ui/react-icons';\nexport const meta = {\n  \"group\": \"svelteuidev-core\",\n  \"packageGroup\": \"@svelteuidev/core\",\n  \"title\": \"Code\",\n  \"slug\": \"/core/code/\",\n  \"category\": \"typography\",\n  \"description\": \"Inline or block code without syntax highlight\",\n  \"example\": \"https://codesandbox.io/embed/code-r032c1?fontsize=14&hidenavigation=1&module=%2FApp.svelte&theme=dark&view=preview\"\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = ({ children, ...props }) => (\n  <LayoutDocs meta={meta} {...props}>{children}</LayoutDocs>\n)\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2 {...{\n      \"id\": \"inline-code\"\n    }}>{`Inline code`}<a parentName=\"h2\" {...{\n        \"href\": \"#inline-code\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`By default, Code component renders inline `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` html element:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Code>This code will be inline</Code>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"block-code\"\n    }}>{`Block code`}<a parentName=\"h2\" {...{\n        \"href\": \"#block-code\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`To render code in `}<inlineCode parentName=\"p\">{`pre`}</inlineCode>{` element pass `}<inlineCode parentName=\"p\">{`block`}</inlineCode>{` prop to Code component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Code block copy message={codeForDemo}>\n  {codeForDemo}\n</Code>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"custom-color\"\n    }}>{`Custom color`}<a parentName=\"h2\" {...{\n        \"href\": \"#custom-color\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <p>{`By default, code has gray color,\nyou can change it to any color from `}<a parentName=\"p\" {...{\n        \"href\": \"/theming/extend-theme/#default-colors\"\n      }}>{`theme colors`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Code color=\"red\">This will be inline</Code>\n<Code color=\"teal\">This will be inline</Code>\n<Code color=\"blue\">This will be inline</Code>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"syntax-highlight\"\n    }}>{`Syntax highlight`}<a parentName=\"h2\" {...{\n        \"href\": \"#syntax-highlight\",\n        \"title\": \"Direct link to heading\",\n        \"className\": \"anchor\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a></h2>\n    <Alert icon={<InfoCircledIcon mdxType=\"InfoCircledIcon\" />} title='Warning' color='yellow' mdxType=\"Alert\">\n  <Text size='lg' mdxType=\"Text\">\n    In case you need syntax highlighting, a @sveltuidev/prism package will be\n    available soon.\n  </Text>\n    </Alert>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}