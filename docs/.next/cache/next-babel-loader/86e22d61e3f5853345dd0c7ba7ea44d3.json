{"ast":null,"code":"var _jsxFileName = \"/Users/kamell/Desktop/test-docs/src/components/useSearch.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useDocSearchKeyboardEvents } from '@docsearch/react';\nimport { siteConfig } from 'siteConfig';\nconst SearchContext = /*#__PURE__*/React.createContext();\nlet DocSearchModal = null;\nexport const useSearch = () => React.useContext(SearchContext);\nexport function SearchProvider({\n  children,\n  searchParameters = {\n    hitsPerPage: 5\n  }\n}) {\n  const [isShowing, setIsShowing] = React.useState(false);\n  const onOpen = React.useCallback(function onOpen() {\n    function importDocSearchModalIfNeeded() {\n      if (DocSearchModal) {\n        return Promise.resolve();\n      }\n\n      return import('@docsearch/react/modal').then(({\n        DocSearchModal: Modal\n      }) => DocSearchModal = Modal);\n    }\n\n    importDocSearchModalIfNeeded().then(() => {\n      setIsShowing(true);\n    });\n  }, []);\n  const onClose = React.useCallback(() => setIsShowing(false), []);\n  useDocSearchKeyboardEvents({\n    isOpen: isShowing,\n    onOpen,\n    onClose\n  });\n  const options = {\n    appId: siteConfig.algolia.appId,\n    apiKey: siteConfig.algolia.apiKey,\n    indexName: siteConfig.algolia.indexName,\n    renderModal: true\n  };\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    key: \"algolia\",\n    rel: \"preconnect\",\n    href: `https://${options.appId}-dsn.algolia.net`,\n    crossOrigin: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), __jsx(SearchContext.Provider, {\n    value: {\n      DocSearchModal,\n      onOpen\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, children), isShowing && /*#__PURE__*/createPortal(__jsx(DocSearchModal, _extends({}, options, {\n    searchParameters: searchParameters,\n    onClose: onClose,\n    navigator: {\n      navigate({\n        suggestionUrl\n      }) {\n        Router.push(suggestionUrl);\n      }\n\n    },\n    transformItems: items => {\n      return items.map(item => {\n        const url = new URL(item.url);\n        return _objectSpread(_objectSpread({}, item), {}, {\n          url: item.url.replace(url.origin, '').replace('#__next', '').replace('/docs/#', '/docs/overview#')\n        });\n      });\n    },\n    hitComponent: Hit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), document.body));\n}\n\nfunction Hit({\n  hit,\n  children\n}) {\n  return __jsx(Link, {\n    href: hit.url.replace(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, children));\n}","map":{"version":3,"sources":["/Users/kamell/Desktop/test-docs/src/components/useSearch.js"],"names":["React","createPortal","Router","Head","Link","useDocSearchKeyboardEvents","siteConfig","SearchContext","createContext","DocSearchModal","useSearch","useContext","SearchProvider","children","searchParameters","hitsPerPage","isShowing","setIsShowing","useState","onOpen","useCallback","importDocSearchModalIfNeeded","Promise","resolve","then","Modal","onClose","isOpen","options","appId","algolia","apiKey","indexName","renderModal","navigate","suggestionUrl","push","items","map","item","url","URL","replace","origin","Hit","document","body","hit"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { createPortal } from 'react-dom'\nimport Router from 'next/router'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport { useDocSearchKeyboardEvents } from '@docsearch/react'\nimport { siteConfig } from 'siteConfig'\n\nconst SearchContext = React.createContext()\nlet DocSearchModal = null\n\nexport const useSearch = () => React.useContext(SearchContext)\n\nexport function SearchProvider({\n  children,\n  searchParameters = {\n    hitsPerPage: 5,\n  },\n}) {\n  const [isShowing, setIsShowing] = React.useState(false)\n\n  const onOpen = React.useCallback(function onOpen() {\n    function importDocSearchModalIfNeeded() {\n      if (DocSearchModal) {\n        return Promise.resolve()\n      }\n\n      return import('@docsearch/react/modal').then(\n        ({ DocSearchModal: Modal }) => (DocSearchModal = Modal)\n      )\n    }\n\n    importDocSearchModalIfNeeded().then(() => {\n      setIsShowing(true)\n    })\n  }, [])\n\n  const onClose = React.useCallback(() => setIsShowing(false), [])\n\n  useDocSearchKeyboardEvents({\n    isOpen: isShowing,\n    onOpen,\n    onClose,\n  })\n\n  const options = {\n    appId: siteConfig.algolia.appId,\n    apiKey: siteConfig.algolia.apiKey,\n    indexName: siteConfig.algolia.indexName,\n    renderModal: true,\n  }\n\n  return (\n    <>\n      <Head>\n        <link\n          key=\"algolia\"\n          rel=\"preconnect\"\n          href={`https://${options.appId}-dsn.algolia.net`}\n          crossOrigin=\"true\"\n        />\n      </Head>\n\n      <SearchContext.Provider value={{ DocSearchModal, onOpen }}>\n        {children}\n      </SearchContext.Provider>\n\n      {isShowing &&\n        createPortal(\n          <DocSearchModal\n            {...options}\n            searchParameters={searchParameters}\n            onClose={onClose}\n            navigator={{\n              navigate({ suggestionUrl }) {\n                Router.push(suggestionUrl)\n              },\n            }}\n            transformItems={items => {\n              return items.map(item => {\n                const url = new URL(item.url)\n                return {\n                  ...item,\n                  url: item.url\n                    .replace(url.origin, '')\n                    .replace('#__next', '')\n                    .replace('/docs/#', '/docs/overview#'),\n                }\n              })\n            }}\n            hitComponent={Hit}\n          />,\n          document.body\n        )}\n    </>\n  )\n}\n\nfunction Hit({ hit, children }) {\n  return (\n    <Link href={hit.url.replace()}>\n      <a>{children}</a>\n    </Link>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}